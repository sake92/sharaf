package ba.sake.sharaf

object Headers {
  val ACCEPT = HttpString("Accept")
  val ACCEPT_CHARSET = HttpString("Accept-Charset")
  val ACCEPT_ENCODING = HttpString("Accept-Encoding")
  val ACCEPT_LANGUAGE = HttpString("Accept-Language")
  val ACCEPT_RANGES = HttpString("Accept-Ranges")
  val AGE = HttpString("Age")
  val ALLOW = HttpString("Allow")
  val AUTHENTICATION_INFO = HttpString("Authentication-Info")
  val AUTHORIZATION = HttpString("Authorization")
  val CACHE_CONTROL = HttpString("Cache-Control")
  val COOKIE = HttpString("Cookie")
  val COOKIE2 = HttpString("Cookie2")
  val CONNECTION = HttpString("Connection")
  val CONTENT_DISPOSITION = HttpString("Content-Disposition")
  val CONTENT_ENCODING = HttpString("Content-Encoding")
  val CONTENT_LANGUAGE = HttpString("Content-Language")
  val CONTENT_LENGTH = HttpString("Content-Length")
  val CONTENT_LOCATION = HttpString("Content-Location")
  val CONTENT_MD5 = HttpString("Content-MD5")
  val CONTENT_RANGE = HttpString("Content-Range")
  val CONTENT_SECURITY_POLICY = HttpString("Content-Security-Policy")
  val CONTENT_TYPE = HttpString("Content-Type")
  val DATE = HttpString("Date")
  val ETAG = HttpString("ETag")
  val EXPECT = HttpString("Expect")
  val EXPIRES = HttpString("Expires")
  val FORWARDED = HttpString("Forwarded")
  val FROM = HttpString("From")
  val HOST = HttpString("Host")
  val IF_MATCH = HttpString("If-Match")
  val IF_MODIFIED_SINCE = HttpString("If-Modified-Since")
  val IF_NONE_MATCH = HttpString("If-None-Match")
  val IF_RANGE = HttpString("If-Range")
  val IF_UNMODIFIED_SINCE = HttpString("If-Unmodified-Since")
  val LAST_MODIFIED = HttpString("Last-Modified")
  val LOCATION = HttpString("Location")
  val MAX_FORWARDS = HttpString("Max-Forwards")
  val ORIGIN = HttpString("Origin")
  val PRAGMA = HttpString("Pragma")
  val PROXY_AUTHENTICATE = HttpString("Proxy-Authenticate")
  val PROXY_AUTHORIZATION = HttpString("Proxy-Authorization")
  val RANGE = HttpString("Range")
  val REFERER = HttpString("Referer")
  val REFERRER_POLICY = HttpString("Referrer-Policy")
  val REFRESH = HttpString("Refresh")
  val RETRY_AFTER = HttpString("Retry-After")
  val SEC_WEB_SOCKET_ACCEPT = HttpString("Sec-WebSocket-Accept")
  val SEC_WEB_SOCKET_EXTENSIONS = HttpString("Sec-WebSocket-Extensions")
  val SEC_WEB_SOCKET_KEY = HttpString("Sec-WebSocket-Key")
  val SEC_WEB_SOCKET_KEY1 = HttpString("Sec-WebSocket-Key1")
  val SEC_WEB_SOCKET_KEY2 = HttpString("Sec-WebSocket-Key2")
  val SEC_WEB_SOCKET_LOCATION = HttpString("Sec-WebSocket-Location")
  val SEC_WEB_SOCKET_ORIGIN = HttpString("Sec-WebSocket-Origin")
  val SEC_WEB_SOCKET_PROTOCOL = HttpString("Sec-WebSocket-Protocol")
  val SEC_WEB_SOCKET_VERSION = HttpString("Sec-WebSocket-Version")
  val SERVER = HttpString("Server")
  val SERVLET_ENGINE = HttpString("Servlet-Engine")
  val SET_COOKIE = HttpString("Set-Cookie")
  val SET_COOKIE2 = HttpString("Set-Cookie2")
  val SSL_CLIENT_CERT = HttpString("SSL_CLIENT_CERT")
  val SSL_CIPHER = HttpString("SSL_CIPHER")
  val SSL_SESSION_ID = HttpString("SSL_SESSION_ID")
  val SSL_CIPHER_USEKEYSIZE = HttpString("SSL_CIPHER_USEKEYSIZE")
  val STATUS = HttpString("Status")
  val STRICT_TRANSPORT_SECURITY = HttpString("Strict-Transport-Security")
  val TE = HttpString("TE")
  val TRAILER = HttpString("Trailer")
  val TRANSFER_ENCODING = HttpString("Transfer-Encoding")
  val UPGRADE = HttpString("Upgrade")
  val USER_AGENT = HttpString("User-Agent")
  val VARY = HttpString("Vary")
  val VIA = HttpString("Via")
  val WARNING = HttpString("Warning")
  val WWW_AUTHENTICATE = HttpString("WWW-Authenticate")
  val X_CONTENT_TYPE_OPTIONS = HttpString("X-Content-Type-Options")
  val X_DISABLE_PUSH = HttpString("X-Disable-Push")
  val X_FORWARDED_FOR = HttpString("X-Forwarded-For")
  val X_FORWARDED_PROTO = HttpString("X-Forwarded-Proto")
  val X_FORWARDED_HOST = HttpString("X-Forwarded-Host")
  val X_FORWARDED_PORT = HttpString("X-Forwarded-Port")
  val X_FORWARDED_SERVER = HttpString("X-Forwarded-Server")
  val X_FRAME_OPTIONS = HttpString("X-Frame-Options")
  val X_XSS_PROTECTION = HttpString("X-Xss-Protection")
}
